-- MySQL Script generated by MySQL Workbench
-- Sat Nov 25 19:58:37 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Student` (
  `StudentID` INT NOT NULL,
  `FName` VARCHAR(45) NULL,
  `LName` VARCHAR(45) NULL,
  PRIMARY KEY (`StudentID`),
  UNIQUE INDEX `StudentID_UNIQUE` (`StudentID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Professor` (
  `ProfessorID` INT NOT NULL,
  `FName` VARCHAR(45) NULL,
  `LName` VARCHAR(45) NULL,
  UNIQUE INDEX `ProfessorID_UNIQUE` (`ProfessorID` ASC),
  PRIMARY KEY (`ProfessorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Course` (
  `CourseID` INT NOT NULL,
  `StartDate` DATE NULL,
  `Professor_ProfessorID` INT NOT NULL,
  UNIQUE INDEX `CourseID_UNIQUE` (`CourseID` ASC),
  PRIMARY KEY (`CourseID`, `Professor_ProfessorID`),
  INDEX `fk_Course_Professor_idx` (`Professor_ProfessorID` ASC),
  CONSTRAINT `fk_Course_Professor`
    FOREIGN KEY (`Professor_ProfessorID`)
    REFERENCES `mydb`.`Professor` (`ProfessorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Register_Student_For_Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Register_Student_For_Course` (
  `CourseID` INT NOT NULL,
  `StudentID` INT NOT NULL,
  PRIMARY KEY (`CourseID`, `StudentID`),
  INDEX `fk_Course_has_Student_Student1_idx` (`StudentID` ASC),
  INDEX `fk_Course_has_Student_Course1_idx` (`CourseID` ASC),
  CONSTRAINT `fk_Course_has_Student_Course1`
    FOREIGN KEY (`CourseID`)
    REFERENCES `mydb`.`Course` (`CourseID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Course_has_Student_Student1`
    FOREIGN KEY (`StudentID`)
    REFERENCES `mydb`.`Student` (`StudentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Meeting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Meeting` (
  `Meeting_room` INT NULL,
  `Date` DATE NULL,
  `Time` TIME(0) NULL,
  `CourseID` INT NOT NULL,
  `RegisteredStudentID` INT NOT NULL,
  `MeetingID` INT NOT NULL,
  PRIMARY KEY (`CourseID`, `RegisteredStudentID`, `MeetingID`),
  UNIQUE INDEX `MeetingID_UNIQUE` (`MeetingID` ASC),
  CONSTRAINT `fk_Meeting_List_of_Students1`
    FOREIGN KEY (`CourseID` , `RegisteredStudentID`)
    REFERENCES `mydb`.`Register_Student_For_Course` (`CourseID` , `StudentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Attendance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Attendance` (
  `Student_Attendance` VARCHAR(3) NULL,
  `Professir_Attendance` VARCHAR(3) NULL,
  `MeetingID` INT NOT NULL,
  PRIMARY KEY (`MeetingID`),
  CONSTRAINT `fk_Attendance_Meeting1`
    FOREIGN KEY (`MeetingID`)
    REFERENCES `mydb`.`Meeting` (`MeetingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
